{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Ambitious/assets/scripts/Globla/GameManger.ts"],"names":["_decorator","Component","director","ccclass","property","GameManager","_playerName","PLAYERNAME","_Money","MONEY","_Store","STORE","_MaxShelfCount","SHELFCOUNT","inst","_inst","onLoad","addPersistRootNode","node","init","ReadPlayerData","getName","getMoney","getStore","key","defaultValue","value","localStorage","getItem","isNaN","Number","parseInt","e","console","error","SavePlayerName","SavePlayerData","SavePlayerMoney","SavePlayerStore","toString","setItem","updatePlayerData","name","money","store","namechange"],"mappings":"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","sourcesContent":["import { _decorator, Component, director } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GameManager\")\r\nexport class GameManager extends Component {\r\n  public _playerName: string = null; // 玩家名称\r\n  private PLAYERNAME: string = \"playername\"; // 本地存储中玩家名称的键\r\n\r\n  public _Money: string = null; // 玩家金钱\r\n  private MONEY: string = \"money\"; // 本地存储中玩家金钱的键\r\n\r\n  public _Store: number = null; // 玩家商店数据\r\n  private STORE: string = \"store\"; // 本地存储中玩家商店数据的键\r\n  private _MaxShelfCount: number = null;\r\n  private SHELFCOUNT: string = \"shelfcount\";\r\n  private static _inst: GameManager = null; // 游戏管理器的单例实例\r\n\r\n  public static inst() {\r\n    return this._inst;\r\n  }\r\n\r\n  onLoad() {\r\n    GameManager._inst = this;\r\n    director.addPersistRootNode(this.node); // 设置 GameManager 节点为持久化，跨场景不销毁\r\n    this.init(); // 初始化游戏数据\r\n  }\r\n\r\n  // 初始化游戏数据\r\n  private init() {\r\n    // 加载数据时使用缓存，避免多次从 localStorage 读取\r\n    this._playerName = this.ReadPlayerData(this.PLAYERNAME, \"鹏\");\r\n    this._Money = this.ReadPlayerData(this.MONEY, 100);\r\n    this._Store = this.ReadPlayerData(this.STORE, 1);\r\n    this._MaxShelfCount = this.ReadPlayerData(this.SHELFCOUNT, 6);\r\n  }\r\n\r\n  /**\r\n   * 获取玩家游戏名字\r\n   * @returns 返回玩家游戏名\r\n   */\r\n  getName() {\r\n    return this._playerName;\r\n  }\r\n\r\n  /**\r\n   * 获取玩家游戏金额余额\r\n   * @returns 返回玩家游戏金钱\r\n   */\r\n  getMoney() {\r\n    return this._Money;\r\n  }\r\n\r\n  /**\r\n   * 获取玩家商店的值\r\n   * @returns 返回玩家商店存储值\r\n   */\r\n  getStore() {\r\n    return this._Store;\r\n  }\r\n\r\n  /***\r\n   * 读取本地玩家游戏数据\r\n   * @param key localStorage 键\r\n   * @param defaultValue 默认值\r\n   * @returns 返回从 localStorage 读取的数据\r\n   */\r\n  ReadPlayerData(key: string, defaultValue: any): any {\r\n    try {\r\n      const value = localStorage.getItem(key);\r\n      if (value === null) return defaultValue;\r\n      // 如果是数字类型的数据，做类型转换\r\n      if (typeof defaultValue === \"number\") {\r\n        return isNaN(Number(value)) ? defaultValue : parseInt(value);\r\n      }\r\n      return value;\r\n    } catch (e) {\r\n      console.error(`读取 ${key} 数据失败`, e);\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 保存玩家名称\r\n   */\r\n  SavePlayerName() {\r\n    this.SavePlayerData(this.PLAYERNAME, this._playerName);\r\n  }\r\n\r\n  /**\r\n   * 保存玩家金钱\r\n   */\r\n  SavePlayerMoney() {\r\n    this.SavePlayerData(this.MONEY, this._Money);\r\n  }\r\n\r\n  /**\r\n   * 保存玩家商店数据\r\n   */\r\n  SavePlayerStore() {\r\n    this.SavePlayerData(this.STORE, this._Store.toString());\r\n  }\r\n\r\n  /**\r\n   * 保存玩家数据到 localStorage\r\n   * @param key localStorage 键\r\n   * @param value 存储值\r\n   */\r\n  SavePlayerData(key: string, value: string) {\r\n    try {\r\n      localStorage.setItem(key, value);\r\n    } catch (e) {\r\n      console.error(`保存 ${key} 数据失败`, e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新玩家数据\r\n   * @param name 玩家名称\r\n   * @param money 玩家金钱\r\n   * @param store 玩家商店数据\r\n   */\r\n  updatePlayerData(name: string, money: string, store: number) {\r\n    this._playerName = name;\r\n    this._Money = money;\r\n    this._Store = store;\r\n    this.SavePlayerName();\r\n    this.SavePlayerMoney();\r\n    this.SavePlayerStore();\r\n  }\r\n\r\n  /**\r\n   * 修改玩家名称\r\n   * @param name 新的玩家名称\r\n   */\r\n  namechange(name: string) {\r\n    this._playerName = name;\r\n    this.SavePlayerName(); // 保存更新的玩家名称\r\n  }\r\n}\r\n"]}
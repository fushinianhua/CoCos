{"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Ambitious/assets/scripts/GetPropenty/GameManager.ts"],"names":["_decorator","Component","director","find","instantiate","Label","Prefab","randomRange","randomRangeInt","ccclass","property","GameManager","String","usedIndexes","Set","Instance","_instance","onLoad","console","log","node","destroy","start","schedule","replaceLabelContent","update","dt","size","workNameArray","length","randomIndex","has","add","WorkLabelNode","prefabLabel","getComponent","string","parent","setPosition","buttonClick","loadScene","getScene","name"],"mappings":";;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AAGAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,Q,OAAAA,Q;AACAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,K,OAAAA,K;AAEAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,c,OAAAA,c;;;;;;;;;OAEI;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;6BAGjBW,W,WADZF,OAAO,CAAC,aAAD,C,UAGLC,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAAC,CAACE,MAAD,CAAD,C,sCALX,MACaD,WADb,SACiCV,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAMzC;AANyC,eAOjCY,WAPiC,GAON,IAAIC,GAAJ,EAPM;AAAA;;AAQzC;AAC0B,mBAARC,QAAQ,GAAgB;AACxC,iBAAO,KAAKC,SAAZ;AACD;;AACSC,QAAAA,MAAM,GAAS;AACvB;AACA,cAAIN,WAAW,CAACK,SAAZ,IAAyB,IAA7B,EAAmC;AACjCL,YAAAA,WAAW,CAACK,SAAZ,GAAwB,IAAxB;AACD,WAFD,MAEO;AACLE,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,iBAAKC,IAAL,CAAUC,OAAV;AACA;AACD;AACF;;AACSC,QAAAA,KAAK,GAAS;AACtB,eAAKC,QAAL,CAAc,KAAKC,mBAAnB,EAAwC,GAAxC;AACD;;AACSC,QAAAA,MAAM,CAACC,EAAD,EAAmB,CAAE;;AAE7BF,QAAAA,mBAAmB,GAAS;AAClC;AACA;AACA;AACA;AACA;AACA,cAAI,KAAKX,WAAL,CAAiBc,IAAjB,KAA0B,KAAKC,aAAL,CAAmBC,MAAjD,EAAyD;AACvD;AACD;;AACD,cAAIC,WAAJ;;AACA,aAAG;AACDA,YAAAA,WAAW,GAAGtB,cAAc,CAAC,CAAD,EAAI,KAAKoB,aAAL,CAAmBC,MAAvB,CAA5B;AACD,WAFD,QAES,KAAKhB,WAAL,CAAiBkB,GAAjB,CAAqBD,WAArB,CAFT,EAVkC,CAalC;;;AACA,eAAKjB,WAAL,CAAiBmB,GAAjB,CAAqBF,WAArB,EAdkC,CAelC;;AACA,cAAIG,aAAa,GAAG7B,WAAW,CAAC,KAAK8B,WAAN,CAA/B;AACAD,UAAAA,aAAa,CAACE,YAAd,CAA2B9B,KAA3B,EAAkC+B,MAAlC,GAA2C,KAAKR,aAAL,CAAmBE,WAAnB,CAA3C;AACAG,UAAAA,aAAa,CAACI,MAAd,GAAuBlC,IAAI,CAAC,iBAAD,CAA3B;AACA8B,UAAAA,aAAa,CAACK,WAAd,CAA0B/B,WAAW,CAAC,CAAC,GAAF,EAAO,GAAP,CAArC,EAAkD,GAAlD;AACD;;AACDgC,QAAAA,WAAW,GAAG;AACZrB,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAjB,UAAAA,QAAQ,CAACsC,SAAT,CAAmBtC,QAAQ,CAACuC,QAAT,GAAoBC,IAAvC;AACD;;AAnDwC,O,UAC1B1B,S;;;;;;;;;;iBAIW,E","sourcesContent":["import {\r\n  _decorator,\r\n  BoxCollider,\r\n  BoxCollider2D,\r\n  Component,\r\n  director,\r\n  find,\r\n  instantiate,\r\n  Label,\r\n  Node,\r\n  Prefab,\r\n  randomRange,\r\n  randomRangeInt,\r\n} from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GameManager\")\r\nexport class GameManager extends Component {\r\n  private static _instance: GameManager;\r\n  @property(Prefab)\r\n  prefabLabel: Prefab;\r\n  @property([String])\r\n  workNameArray: string[] = [];\r\n  //使用过的索引\r\n  private usedIndexes: Set<number> = new Set();\r\n  // 获取实例\r\n  public static get Instance(): GameManager {\r\n    return this._instance;\r\n  }\r\n  protected onLoad(): void {\r\n    //确保全局只有一个实例\r\n    if (GameManager._instance == null) {\r\n      GameManager._instance = this;\r\n    } else {\r\n      console.log(\"GameManager is already exist\");\r\n      this.node.destroy();\r\n      return;\r\n    }\r\n  }\r\n  protected start(): void {\r\n    this.schedule(this.replaceLabelContent, 0.5);\r\n  }\r\n  protected update(dt: number): void {}\r\n\r\n  private replaceLabelContent(): void {\r\n    // 重置已使用的索引列表，如果所有索引都被使用过一次\r\n    // if (this.usedIndexes.size === this.workNameArray.length) {\r\n    //     this.usedIndexes.clear();\r\n    // }\r\n    // 获取一个未使用的随机索引\r\n    if (this.usedIndexes.size === this.workNameArray.length) {\r\n      return;\r\n    }\r\n    let randomIndex: number;\r\n    do {\r\n      randomIndex = randomRangeInt(0, this.workNameArray.length);\r\n    } while (this.usedIndexes.has(randomIndex));\r\n    // 标记此索引为已使用\r\n    this.usedIndexes.add(randomIndex);\r\n    // 更新 prefabLabel 的内容\r\n    let WorkLabelNode = instantiate(this.prefabLabel);\r\n    WorkLabelNode.getComponent(Label).string = this.workNameArray[randomIndex];\r\n    WorkLabelNode.parent = find(\"Canvas/WorkList\");\r\n    WorkLabelNode.setPosition(randomRange(-320, 320), 670);\r\n  }\r\n  buttonClick() {\r\n    console.log(\"buttonClick\");\r\n    director.loadScene(director.getScene().name);\r\n  }\r\n}\r\n"]}